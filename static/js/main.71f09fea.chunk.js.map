{"version":3,"sources":["components/Logo/face-detection.svg","components/ImageLinkForm/go.svg","components/FaceRecognition/FaceRecognition.js","components/Navigation/Navigation.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FaceRecognition","_ref","imageURL","box","react_default","a","createElement","className","id","src","alt","width","height","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Navigation","onRouteChange","isSignedIn","onClick","Logo","tilt_default","options","max","LogoImage","Rank","ImageLinkForm","onSubmit","onInputChange","clearForm","type","onChange","GoButton","SignIn","htmlFor","name","value","Register","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","interactivity","onresize","density_auto","density_area","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","route","_this$state","particles_default","params","components_Navigation_Navigation","components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_SignIn_SignIn","components_Register_Register","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71f09fea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face-detection.25850e8b.svg\";","module.exports = __webpack_public_path__ + \"static/media/go.5d9ab066.svg\";","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageURL, box }) => {\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' src={imageURL} alt='' width='500px' height='auto'/>\r\n        <div className='bounding_box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;\r\n","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if(isSignedIn) {\r\n      return (\r\n        <nav className='flex justify-end'>\r\n          <p className='f3 link dim white-70 pa3 pointer'  onClick={() => onRouteChange('signout')}>Sign Out</p>\r\n        </nav>\r\n      );\r\n    } else {\r\n      return (\r\n        <nav className='flex justify-end'>\r\n          <p className='f3 link dim white-70 pa3 pointer'  onClick={() => onRouteChange('signin')}>Sign In</p>\r\n          <p className='f3 link dim white-70 pa3 pointer'  onClick={() => onRouteChange('register')}>Register</p>\r\n        </nav>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport LogoImage from './face-detection.svg';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className='ml2 mb4 mr 4 absolute top-1'>\r\n      <Tilt className=\"Tilt shadow-4\" options={{ max : 35 }} style={{ height: 80, width: 80 }} >\r\n        <div className=\"Tilt-inner pa2\">\r\n          <img src={LogoImage} alt='logo'/>\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\n\r\nconst Rank = () => {\r\n  return (\r\n    <div>\r\n      <div className='white f3'>\r\n        {'Your current rank is... '}\r\n      </div>\r\n      <div className='white f3'>\r\n        {'#5'}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;\r\n","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport GoButton from './go.svg';\r\n\r\nconst ImageLinkForm = ({ onSubmit, onInputChange, clearForm }) => {\r\n  return (\r\n    <div>\r\n      <p className='tc f3 near-white'>\r\n        {'This will detect faces in your picture. Give it a try.'}\r\n      </p>\r\n      <div className='center'>\r\n        <p className='tc mt3 h2 ph2 pt1 f5 link ba br2 b--silver bg-transparent near-white grow mr3 pointer' onClick={clearForm}>Clear</p>\r\n        <input id=\"imageUrlInput\" className='mt3 h2 f6 w-50 pl2 ba br3 b--silver bg-transparent near-white' type='text' onChange={onInputChange}/>\r\n        <div className='ml3 dim pointer' onClick={onSubmit}>\r\n          <Tilt className=\"Tilt\" options={{ max : 55 }} style={{ height: 64, width: 64 }} >\r\n            <div className=\"Tilt-inner\">\r\n              <img src={GoButton} alt='Go'/>\r\n            </div>\r\n          </Tilt>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageLinkForm;\r\n","import React from 'react';\r\n\r\nconst SignIn = ({ onRouteChange }) => {\r\n  return (\r\n    <article className=\"br3 ba near-white b--white-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\r\n    <main className=\"pa4\">\r\n  <div className=\"measure\">\r\n    <fieldset id=\"sign_in\" className=\"ba b--transparent ph0 mh0\">\r\n      <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n        <input className=\"pa2 input-reset near-white ba b--white-30 bg-transparent w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n      </div>\r\n      <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n        <input className=\"b pa2 input-reset near-white ba b--white-30 bg-transparent w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n      </div>\r\n    </fieldset>\r\n    <div className=\"\">\r\n      <input className=\"b w-50 ph3 pv2 input-reset near-white ba b--white-30 bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" onClick={() => onRouteChange('home')}/>\r\n    </div>\r\n    <div className=\"lh-copy mt3\">\r\n      <p onClick={() => onRouteChange('register')} className=\"f6 link dim near-white db pointer\">Register</p>\r\n    </div>\r\n  </div>\r\n</main>\r\n</article>\r\n\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n  return (\r\n    <article className=\"br3 ba near-white b--white-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\r\n    <main className=\"pa4\">\r\n  <div className=\"measure\">\r\n    <fieldset id=\"sign_in\" className=\"ba b--transparent ph0 mh0\">\r\n      <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"nickname\">Nickname</label>\r\n        <input className=\"pa2 input-reset near-white ba b--white-30 bg-transparent w-100\" type=\"text\" name=\"nickname\"  id=\"nickname\"/>\r\n      </div>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n        <input className=\"pa2 input-reset near-white ba b--white-30 bg-transparent w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n      </div>\r\n      <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n        <input className=\"b pa2 input-reset near-white ba b--white-30 bg-transparent w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n      </div>\r\n    </fieldset>\r\n    <div className=\"\">\r\n      <input className=\"b w-50 ph3 pv2 input-reset near-white ba b--white-30 bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\" onClick={() => onRouteChange('home')}/>\r\n    </div>\r\n  </div>\r\n</main>\r\n</article>\r\n\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport Clarifai from 'clarifai';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Logo from './components/Logo/Logo';\r\nimport Rank from './components/Rank/Rank';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\n\r\nimport SignIn from './components/SignIn/SignIn';\r\nimport Register from './components/Register/Register';\r\nimport './App.css';\r\n\r\n\r\nconst app = new Clarifai.App({\r\n  apiKey: 'a2dff173ba794df394bdbdf2372b94d4'\r\n});\r\n\r\nconst particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 80,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    }\r\n  },\r\n  interactivity: {\r\n    onresize: {\r\n      enable: true,\r\n      density_auto: true,\r\n      density_area: 400\r\n    }\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: '',\r\n      imageURL: '',\r\n      box: {},\r\n      route: 'signin',\r\n      isSignedIn: false\r\n    }\r\n  }\r\n\r\ncalculateFaceLocation = (data) => {\r\n  const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n  const image = document.getElementById('inputimage');\r\n  const width = Number(image.width);\r\n  const height = Number(image.height);\r\n  return {\r\n    leftCol: clarifaiFace.left_col * width,\r\n    topRow: clarifaiFace.top_row * height,\r\n    rightCol: width - (clarifaiFace.right_col * width),\r\n    bottomRow: height - (clarifaiFace.bottom_row * height)\r\n  };\r\n}\r\n\r\ndisplayFaceBox = (box) => {\r\n  this.setState({box: box});\r\n}\r\n\r\nonInputChange = (event) => {\r\n  this.setState({input: event.target.value});\r\n}\r\n\r\nclearForm = () => {\r\n  document.getElementById('imageUrlInput').value = '';\r\n  this.setState({input: ''});\r\n}\r\n\r\nonSubmit = () => {\r\n  this.setState({imageURL: this.state.input});\r\n  app.models.predict(\r\n  Clarifai.FACE_DETECT_MODEL,\r\n  this.state.input)\r\n  .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\r\n  .catch(err => console.log(err));\r\n}\r\n\r\nonRouteChange = (route) => {\r\n  if (route === 'signout') {\r\n    this.setState({isSignedIn: false})\r\n  } else if (route === 'home') {\r\n    this.setState({isSignedIn: true})\r\n  }\r\n  this.setState({route: route});\r\n}\r\n\r\n  render() {\r\n    const { isSignedIn, imageURL, box, route } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className='particles'\r\n        params={particlesOptions}/>\r\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\r\n        <Logo />\r\n        { route === 'home'\r\n        ?\r\n        <div>\r\n          <Rank />\r\n          <ImageLinkForm\r\n          onInputChange={this.onInputChange}\r\n          onSubmit={this.onSubmit}\r\n          clearForm={this.clearForm}/>\r\n          <FaceRecognition\r\n          box={box}\r\n          imageURL={imageURL}/>\r\n        </div>\r\n        : (\r\n          route === 'signin' ?\r\n          <SignIn onRouteChange={this.onRouteChange}/>\r\n          : <Register onRouteChange={this.onRouteChange}/>\r\n        )\r\n\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}