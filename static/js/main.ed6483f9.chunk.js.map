{"version":3,"sources":["components/Logo/face-detection.svg","components/ImageLinkForm/go.svg","components/FaceRecognition/FaceRecognition.js","components/Navigation/Navigation.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FaceRecognition","_ref","imageURL","box","react_default","a","createElement","className","id","src","alt","width","height","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Navigation","onRouteChange","isSignedIn","onClick","Logo","tilt_default","options","max","LogoImage","Rank","nickname","entries","concat","ImageLinkForm","onSubmit","onInputChange","clearPage","type","onChange","GoButton","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","submitOnEnterPress","key","onSubmitSignIn","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","htmlFor","name","onKeyPress","React","Component","Register","onNicknameChange","signUpNickname","signUpEmail","signUpPassword","onSubmitSignUp","particlesOptions","particles","number","density","enable","value_area","interactivity","onresize","density_auto","density_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","status","count","assign","alert","_this$state","particles_default","params","components_Navigation_Navigation","components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_SignIn_SignIn","components_Register_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed6483f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face-detection.25850e8b.svg\";","module.exports = __webpack_public_path__ + \"static/media/go.5d9ab066.svg\";","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageURL, box }) => {\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' src={imageURL} alt='' width='500px' height='auto'/>\r\n        <div className='bounding_box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;\r\n","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if(isSignedIn) {\r\n      return (\r\n        <nav className='flex justify-end'>\r\n          <p className='f3 link dim white-70 pa3 pointer'  onClick={() => onRouteChange('signout')}>Sign Out</p>\r\n        </nav>\r\n      );\r\n    } else {\r\n      return (\r\n        <nav className='flex justify-end'>\r\n          <p className='f3 link dim white-70 pa3 pointer'  onClick={() => onRouteChange('signin')}>Sign In</p>\r\n          <p className='f3 link dim white-70 pa3 pointer'  onClick={() => onRouteChange('register')}>Register</p>\r\n        </nav>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport LogoImage from './face-detection.svg';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className='ml2 mb4 mr 4 absolute top-1'>\r\n      <Tilt className=\"Tilt shadow-4\" options={{ max : 35 }} style={{ height: 80, width: 80 }} >\r\n        <div className=\"Tilt-inner pa2\">\r\n          <img src={LogoImage} alt='logo'/>\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\n\r\nconst Rank = ({nickname, entries}) => {\r\n  return (\r\n    <div>\r\n      <div className='near-white f4 f3-l mh2 mt4 mb1'>\r\n        {`${nickname}, your current rank is...`}\r\n      </div>\r\n      <div className='near-white f3 mb5'>\r\n        {entries}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;\r\n","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport GoButton from './go.svg';\r\n\r\nconst ImageLinkForm = ({ onSubmit, onInputChange, clearPage }) => {\r\n  return (\r\n    <div>\r\n      <p className='tc f4 f3-l near-white'>\r\n        {'This will detect faces in your picture. Give it a try.'}\r\n      </p>\r\n      <div className='center'>\r\n        <p className='tc mt3 w-15 h2 ph2 pt1 f5 link ba br2 b--silver bg-transparent near-white grow mr3 pointer' onClick={clearPage}>Clear</p>\r\n        <input id=\"imageUrlInput\" className='mt3 h2 f6 w-50 pl2 ba br3 b--silver bg-transparent near-white' type='text' onChange={onInputChange}/>\r\n        <div className='ml3 dim pointer' onClick={onSubmit}>\r\n          <Tilt className=\"Tilt\" options={{ max : 55 }} style={{ height: 64, width: 64 }} >\r\n            <div className=\"Tilt-inner\">\r\n              <img src={GoButton} alt='Go'/>\r\n            </div>\r\n          </Tilt>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageLinkForm;\r\n","import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: '',\r\n      signInPassword: ''\r\n    }\r\n  }\r\n\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({signInEmail: event.target.value})\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({signInPassword: event.target.value})\r\n  }\r\n\r\n  submitOnEnterPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      this.onSubmitSignIn();\r\n    }\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('https://whispering-depths-44095.herokuapp.com/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(user => {\r\n      if(user.id) {\r\n        this.props.loadUser(user);\r\n        this.props.onRouteChange('home');\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <article className=\"br3 ba near-white b--white-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\r\n      <main className=\"pa4\">\r\n    <div className=\"measure\">\r\n      <fieldset id=\"sign_in\" className=\"ba b--transparent ph0 mh0\">\r\n        <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n        <div className=\"mt3\">\r\n          <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n          <input onChange={this.onEmailChange} className=\"pa2 near-white ba b--white-30 bg-transparent w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n        </div>\r\n        <div className=\"mv3\">\r\n          <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n          <input onKeyPress={this.submitOnEnterPress} onChange={this.onPasswordChange} className=\"b pa2 near-white ba b--white-30 bg-transparent w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n        </div>\r\n      </fieldset>\r\n      <div className=\"\">\r\n        <input className=\"b w-50 ph3 pv2 near-white ba b--white-30 bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" onClick={this.onSubmitSignIn}/>\r\n      </div>\r\n      <div className=\"lh-copy mt3\">\r\n        <p className=\"f6 link dim near-white db pointer\">Register</p>\r\n      </div>\r\n    </div>\r\n    </main>\r\n    </article>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signUpNickname: '',\r\n      signUpEmail: '',\r\n      signUpPassword: ''\r\n    }\r\n  }\r\n\r\n  onNicknameChange = (event) => {\r\n    this.setState({signUpNickname: event.target.value})\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({signUpEmail: event.target.value})\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({signUpPassword: event.target.value})\r\n  }\r\n\r\n  submitOnEnterPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      this.onSubmitSignIn();\r\n    }\r\n  }\r\n\r\n  onSubmitSignUp = () => {\r\n    fetch('https://whispering-depths-44095.herokuapp.com/register', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        nickname: this.state.signUpNickname,\r\n        email: this.state.signUpEmail,\r\n        password: this.state.signUpPassword\r\n      }) \r\n    }) \r\n    .then(response => response.json())\r\n    .then(user => {\r\n      if (user.id) {\r\n        this.props.loadUser(user);\r\n        this.props.onRouteChange('home');\r\n      }\r\n    })\r\n  }\r\n\r\n    render() {\r\n      return (\r\n        <article className=\"br3 ba near-white b--white-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\r\n        <main className=\"pa4\">\r\n      <div className=\"measure\">\r\n        <fieldset id=\"sign_in\" className=\"ba b--transparent ph0 mh0\">\r\n          <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n          <div className=\"mt3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"nickname\">Nickname</label>\r\n            <input onChange={this.onNicknameChange} className=\"pa2 input-reset near-white ba b--white-30 bg-transparent w-100\" type=\"text\" name=\"nickname\"  id=\"nickname\"/>\r\n          </div>\r\n          <div className=\"mt3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n            <input onChange={this.onEmailChange} className=\"pa2 input-reset near-white ba b--white-30 bg-transparent w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n          </div>\r\n          <div className=\"mv3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n            <input onKeyPress={this.submitOnEnterPress} onChange={this.onPasswordChange} className=\"b pa2 input-reset near-white ba b--white-30 bg-transparent w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n          </div>\r\n        </fieldset>\r\n        <div className=\"\">\r\n          <input className=\"b w-50 ph3 pv2 input-reset near-white ba b--white-30 bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\" onClick={this.onSubmitSignUp}/>\r\n        </div>\r\n      </div>\r\n    </main>\r\n    </article>\r\n\r\n      );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Logo from './components/Logo/Logo';\r\nimport Rank from './components/Rank/Rank';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport SignIn from './components/SignIn/SignIn';\r\nimport Register from './components/Register/Register';\r\nimport './App.css';\r\n\r\nconst particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 80,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    }\r\n  },\r\n  interactivity: {\r\n    onresize: {\r\n      enable: true,\r\n      density_auto: true,\r\n      density_area: 400\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  input: '',\r\n  imageURL: '',\r\n  box: {},\r\n  route: 'signin',\r\n  isSignedIn: false,\r\n  user: {\r\n    id: '',\r\n    nickname: '',\r\n    email: '',\r\n    entries: 0,\r\n    joined: ''\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  loadUser = (data) => {\r\n    this.setState({user: {\r\n      id: data.id,\r\n      nickname: data.nickname,\r\n      email: data.email,\r\n      entries: data.entries,\r\n      joined: data.joined\r\n    }\r\n    })\r\n  }\r\n\r\ncalculateFaceLocation = (data) => {\r\n  const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n  const image = document.getElementById('inputimage');\r\n  const width = Number(image.width);\r\n  const height = Number(image.height);\r\n  return {\r\n    leftCol: clarifaiFace.left_col * width,\r\n    topRow: clarifaiFace.top_row * height,\r\n    rightCol: width - (clarifaiFace.right_col * width),\r\n    bottomRow: height - (clarifaiFace.bottom_row * height)\r\n  };\r\n}\r\n\r\ndisplayFaceBox = (box) => {\r\n  this.setState({box: box});\r\n}\r\n\r\nonInputChange = (event) => {\r\n  this.setState({input: event.target.value});\r\n}\r\n\r\nclearPage = () => {\r\n  document.getElementById('imageUrlInput').value = '';\r\n  this.setState({input: ''});\r\n  this.setState({imageURL: ''});\r\n} \r\n\r\nonSubmit = () => {\r\n  if (this.state.imageURL === '')\r\n  {\r\n    this.setState({imageURL: this.state.input});\r\n    fetch('https://whispering-depths-44095.herokuapp.com/imageurl', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        input: this.state.input\r\n      })\r\n    })\r\n    .then(response => {\r\n      if (response.status !== 400) {\r\n        response.json()\r\n        .then(response => {\r\n          fetch('https://whispering-depths-44095.herokuapp.com/image', {\r\n            method: 'put',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n              id: this.state.user.id\r\n            })\r\n          })\r\n          .then(response => response.json())\r\n          .then(count => {\r\n            this.setState(Object.assign(\r\n              this.state.user,\r\n              { entries: count }\r\n            ))\r\n          })\r\n          this.displayFaceBox(this.calculateFaceLocation(response))\r\n         })\r\n        } else {\r\n          this.clearPage();\r\n          alert('Incorrect URL!');\r\n        }\r\n     })\r\n  } else {\r\n   alert('You have already posted an image!');\r\n  }\r\n}\r\n\r\nonRouteChange = (route) => {\r\n  if (route === 'signout') {\r\n    this.setState(initialState);\r\n  } else if (route === 'home') {\r\n    this.setState({isSignedIn: true});\r\n  }\r\n  this.setState({route: route});\r\n}\r\n\r\n  render() {\r\n    const { isSignedIn, imageURL, box, route } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className='particles'\r\n        params={particlesOptions}/>\r\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\r\n        <Logo />\r\n        { route === 'home'\r\n        ?\r\n        <div>\r\n          <Rank nickname={this.state.user.nickname}\r\n          entries={this.state.user.entries} />\r\n          <ImageLinkForm\r\n          onInputChange={this.onInputChange}\r\n          onSubmit={this.onSubmit}\r\n          clearPage={this.clearPage}/>\r\n          <FaceRecognition\r\n          box={box}\r\n          imageURL={imageURL}/>\r\n        </div>\r\n        : (\r\n          route === 'signin' ?\r\n          <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n        )\r\n\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}